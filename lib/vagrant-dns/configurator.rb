require 'fileutils'
require 'yaml'

module VagrantDNS
  class Configurator
    attr_accessor :vm, :tmp_path

    def initialize(vm, tmp_path)
      @vm = vm
      @tmp_path = tmp_path
    end

    def up!
      regenerate_resolvers!
      ensure_deamon_env!
      register_patterns!
    end

    def down!
      unregister_patterns!
    end

    private
      def regenerate_resolvers!
        FileUtils.mkdir_p(resolver_folder)

        port = VagrantDNS::Config.listen.first.last
        tlds = dns_options(vm)[:tlds]

        tlds.each do |tld|
          File.open(File.join(resolver_folder, tld), "w") do |f|
            f << resolver_file(port)
          end
        end
      end

      def register_patterns!
        opts     = dns_options(vm)

        patterns = opts[:patterns] || default_patterns(opts)
        if patterns.empty?
         vm.ui.warn '[vagrant-dns] TLD but no host_name given. No patterns will be configured.'
         return
        end

        network = opts[:networks].find do |nw|
          nw.first == :private_network && nw.last[:ip]
        end

        unless network
          network = opts[:networks].find do |nw|
            nw.first == :public_network && nw.last[:ip]
          end
        end

        unless network
          vm.ui.warn '[vagrant-dns] Could not find any static network IP. No patterns will be configured.'
          return
        end

        ip = network.last[:ip]

        registry = YAML.load(File.read(config_file)) if File.exists?(config_file)
        registry ||= {}

        patterns.each do |p|
          p = p.source if p.respond_to? :source # Regexp#to_s is unusable
          registry[p] = ip
        end

        File.open(config_file, "w") { |f| f << YAML.dump(registry) }
      end

      def unregister_patterns!
        opts     = dns_options(vm)

        patterns = opts[:patterns] || default_patterns(opts)
        if patterns.empty?
          vm.ui.warn '[vagrant-dns] TLD but no host_name given. No patterns will be removed.'
          return
        end

        registry = YAML.load(File.read(config_file)) if File.exists?(config_file)
        unless registry
          vm.ui.warn '[vagrant-dns] Configuration file does not exists. No patterns will be removed.'
          return
        end

        patterns.each do |p|
          p = p.source if p.respond_to? :source # Regexp#to_s is unusable
          if (ip = registry.delete(p))
            vm.ui.info "[vagrant-dns] Removing pattern: #{p} for ip: #{ip}"
          else
            vm.ui.info "[vagrant-dns] Pattern: #{p} was not in config."
          end
        end

        File.open(config_file, "w") { |f| f << YAML.dump(registry) }
      end

      def dns_options(vm)
        dns_options = vm.config.dns.to_hash
        dns_options[:host_name] = vm.config.vm.hostname
        dns_options[:networks] = vm.config.vm.networks
        dns_options
      end

      def default_patterns(opts)
        if opts[:host_name]
          opts[:tlds].map { |tld| /^.*#{opts[:host_name]}.#{tld}$/ }
        else
          []
        end
      end

      def resolver_file(port)
        contents = <<-FILE
# this file is generated by vagrant-dns
nameserver 127.0.0.1
port #{port}
FILE
      end

      def resolver_folder
        File.join(tmp_path, "resolver")
      end

      def ensure_deamon_env!
        FileUtils.mkdir_p(File.join(tmp_path, "daemon"))
      end

      def config_file
        File.join(tmp_path, "config")
      end
  end
end
